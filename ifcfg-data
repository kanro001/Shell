#!/bin/sh
#
# The ifcfg-data tool extract data from the output of the ifconfig(8) command.
# 
# ifcfg-data reads data from stdin and prints output to stdout.
#
# Run this script as:
# ifconfig -a | ifcfg-data -[imn]
#
# OPTIONS
#	ifcfg-data accepts the following command-line flags:
#   -i  Print all IP addresses.
#   -m  Print all MAC addresses.
#   -n  Print all netmasks.
#
# Written by Renjie Weng <rweng@stevens.edu> in March 2013.

old=$@
arg=''
regExp=''
position=''
if [ $# -gt 2 ]
then
	echo too many arguments
	exit 1
fi

if [ $# -eq 1 ]
then
	arg="$1"
	if [ "$arg" = "-i" ] # Print all IP addresses
	then
		regExp='.*(inet[6]? ?(addr:)?) ?((([0-9]{1,3}.){3}[0-9]{1,3})|([0-9a-f:]+))[ %/].*' #'.*inet[6]? ?(([0-9.]+)|([0-9a-f:]+)|([0-9a-f]{3,4}:?)+).*'
		position='\3'
	elif [ "$arg" = "-m" ] # Pirnt all MAC addresses
	then
		regExp='.*(address: |HWaddr|ether) ?(([0-9a-fA-F]{1,2}[:-]){5}([0-9a-fA-F]{2}))(.*|$)'
		position='\2'
	elif [ "$arg" = "-n" ] # Print all netmasks
	then
		regExp='.*[mM]ask:? ?((0?x?[0-9a-f]{8})|([2550.]+))(.*|$)'
		position='\1'
	else
		echo the argument can only be -i, -m, or -n
		exit 1
	fi
elif [ $# -eq 0 ]
then
	echo require 2 arguments, or using pipe with one argument -i, -m, or -n
	exit 1
else
	echo too many arguments
	exit 1
fi

sed -n -E "s/$regExp/$position/p"
exit 0
